{"version":3,"sources":["logo.svg","component/Greet.js","component/Square.js","component/Board.js","component/calculateWinner.js","component/NameForm.js","component/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Greet","props","className","Square","onClick","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","hello","hello2","NameForm","myChangeHandler","event","nam","target","name","val","setState","state","p1","p2","localStorage","clear","setItem","type","document","body","classList","toggle","getElementById","onChange","ReactDOM","render","Game","history","Array","fill","stepNumber","xIsNext","getItem","alert","slice","concat","flag","win","text","step","current","winner","moves","map","move","desc","key","jumpTo","status","handleClick","App","class","id","href","Boolean","window","location","hostname","match","hydrate","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b721295b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react'\r\n\r\nconst Greet=(props)=>{\r\n  return (\r\n    <div className=\"Greet\" >\r\n  <h1>Welcome to Tic-Tac-Toe!</h1>\r\n    </div>\r\n)}\r\n\r\nexport default Greet\r\n","import React,{Component} from 'react'\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\nexport default Square\r\n","import React,{Component} from 'react'\r\nimport Square from './Square'\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Board\r\n","function calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\nexport default calculateWinner\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nlet hello=\"Please Enter Your Names:\";\r\nlet hello2=\"\";\r\nclass NameForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      p1: '',\r\n      p2: '',\r\n    };\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    var nam = event.target.name;\r\n    var val = event.target.value;\r\n    this.setState({[nam]: val});\r\n    hello=\"Hello \";\r\n\r\n    }\r\n  render() {\r\n    localStorage.clear();\r\n    localStorage.setItem(\"val1\",this.state.p1);\r\n    localStorage.setItem(\"val2\",this.state.p2);\r\n    if(this.state.p2!='')\r\n    {\r\n      hello2=\"and \"+this.state.p2+\" !\";\r\n    }\r\n    return (\r\n      <form className=\"nameform\">\r\n      <div><strong className=\"high\">{hello} {this.state.p1} {hello2}</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n      <label className=\"lab\">Dark Mode: </label>\r\n  <input type=\"checkbox\" onClick={()=>{document.body.classList.toggle(\"dark-mode\");document.getElementById(\"nav\").classList.toggle(\"nav-dark\");}}  />\r\n  </div>\r\n  <br/>\r\n      <label>Player X: </label>\r\n      <input\r\n        type='text'\r\n        name='p1'\r\n        onChange={this.myChangeHandler}\r\n      />\r\n      &nbsp;&nbsp;&nbsp;\r\n      <label>Player O: </label>\r\n      <input\r\n        type='text'\r\n        name='p2'\r\n        onChange={this.myChangeHandler}\r\n      />\r\n      </form>\r\n    );\r\n  }\r\n\r\n}\r\nexport default NameForm\r\nReactDOM.render(<NameForm />, document.getElementById('root'));\r\n","import React,{Component} from 'react'\r\nimport Square from './Square'\r\nimport Board from './Board'\r\nimport calculateWinner from './calculateWinner'\r\nimport NameForm from './NameForm'\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null)\r\n        }\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    if(localStorage.getItem(\"val1\")==''|| localStorage.getItem(\"val2\")=='')\r\n    {\r\n      alert(\"Plase Enter your Names\")\r\n    }\r\n    else {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares\r\n        }\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    });\r\n\r\n    var flag=0;\r\n    var win=calculateWinner(squares);\r\n    let text=\"Winner Winner Chicken Dinner \";\r\n    if(win=='X')\r\n    alert(text+localStorage.getItem(\"val1\")+\"!\");\r\n    else if(win=='O')\r\n    alert(text+localStorage.getItem(\"val2\")+\"!\");\r\n    else if(this.state.history.length==9 && !win && !flag)\r\n      {    alert(\"It's a Draw!\"); flag=1}\r\n  }\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n    var flag=0;\r\n    let status=\"X moves first!\";\r\n    if (winner && winner!='Draw') {\r\n      if(winner=='X')\r\n      {\r\n      let x=localStorage.getItem(\"val1\");\r\n      status = \"Winner is \" + x;\r\n      }\r\n      else if(winner=='O') {\r\n        let y=localStorage.getItem(\"val2\");\r\n        status = \"Winner is \" + y;\r\n      }\r\n    }\r\n    else {\r\n      if(localStorage.getItem(\"val1\")!='' && localStorage.getItem(\"val2\")!='')\r\n      {\r\n      if(this.state.xIsNext)\r\n      {status=localStorage.getItem(\"val1\")+\"'s turn\";}\r\n      else {\r\n        status=localStorage.getItem(\"val2\")+\"'s turn\";\r\n      }\r\n    }\r\n  }\r\n  if(!winner && this.state.history.length === 10){\r\n     status = \"It's a Draw!\";\r\n  }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={i => this.handleClick(i)}\r\n           />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\nexport default Game\r\n","import React,{ Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport Greet from './component/Greet';\r\nimport Hello from './component/Hello'\r\nimport Game from './component/Game'\r\nimport NameForm from './component/NameForm'\r\nclass App extends Component{\r\n  render(){\r\n    var element;\r\n  let darkMode=true;\r\n    return(\r\n    <div>\r\n    <div class=\"nav\" id=\"nav\">\r\n    <Greet/>\r\n    </div>\r\n    <hr/>\r\n    <NameForm/>\r\n    <hr/>\r\n    <Game/>\r\n    <hr/>\r\n    <div className=\"footer\">Made by Smiket Barodia <a href=\"https://github.com/Smket99/tic-tac-toe\"> GitHub</a></div>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.hydrate(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}